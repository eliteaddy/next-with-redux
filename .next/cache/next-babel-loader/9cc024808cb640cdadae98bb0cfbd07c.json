{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { makeStore } from '../redux';\nimport { Provider } from 'react-redux';\nimport { getCookie } from '../redux/actions/authActions'; // import App, { Container } from 'next/app';\n\nimport axios from 'axios';\nimport withRedux from 'next-redux-wrapper';\nimport Head from '../components/head';\nimport Layout from '../components/Layout';\n\nconst MyApp = ({\n  Component,\n  pageProps,\n  store\n}) => {\n  return __jsx(Provider, {\n    store: store\n  }, __jsx(Layout, null, __jsx(Head, null), __jsx(Component, pageProps)));\n};\n\nMyApp.getInitialProps = async ({\n  Component,\n  ctx\n}) => {\n  // we can dispatch from here too\n  ctx.store.dispatch({\n    type: 'API',\n    payload: 'api'\n  });\n  const token = getCookie('token', ctx.req);\n  axios.get(`http://localhost:5000/users/api`, {\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      'x-auth-token': token\n    }\n  }).then(res => {\n    // console.log(res.data);\n    ctx.store.dispatch({\n      type: 'AUTHENTICATE',\n      payload: token\n    });\n    ctx.store.dispatch({\n      type: 'USERINFO',\n      payload: res.data\n    });\n  });\n  const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n  return {\n    pageProps\n  };\n};\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["/home/haryormeedey/Documents/React-Apps/withredux/frontend/pages/_app.js"],"names":["React","makeStore","Provider","getCookie","axios","withRedux","Head","Layout","MyApp","Component","pageProps","store","getInitialProps","ctx","dispatch","type","payload","token","req","get","headers","Accept","then","res","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,SAAT,QAA0B,8BAA1B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,CAAD,KAAqC;AAClD,SACC,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEA;AAAjB,KACC,MAAC,MAAD,QACC,MAAC,IAAD,OADD,EAEC,MAAC,SAAD,EAAeD,SAAf,CAFD,CADD,CADD;AAQA,CATD;;AAWAF,KAAK,CAACI,eAAN,GAAwB,OAAO;AAAEH,EAAAA,SAAF;AAAaI,EAAAA;AAAb,CAAP,KAA8B;AACrD;AACAA,EAAAA,GAAG,CAACF,KAAJ,CAAUG,QAAV,CAAmB;AAAEC,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,OAAO,EAAE;AAAxB,GAAnB;AACA,QAAMC,KAAK,GAAGd,SAAS,CAAC,OAAD,EAAUU,GAAG,CAACK,GAAd,CAAvB;AACAd,EAAAA,KAAK,CACHe,GADF,CACO,iCADP,EACyC;AACvCC,IAAAA,OAAO,EAAE;AACRC,MAAAA,MAAM,EAAE,kBADA;AAER,sBAAgB,kBAFR;AAGR,sBAAgBJ;AAHR;AAD8B,GADzC,EAQEK,IARF,CAQQC,GAAD,IAAS;AACd;AACAV,IAAAA,GAAG,CAACF,KAAJ,CAAUG,QAAV,CAAmB;AAAEC,MAAAA,IAAI,EAAE,cAAR;AAAwBC,MAAAA,OAAO,EAAEC;AAAjC,KAAnB;AACAJ,IAAAA,GAAG,CAACF,KAAJ,CAAUG,QAAV,CAAmB;AAAEC,MAAAA,IAAI,EAAE,UAAR;AAAoBC,MAAAA,OAAO,EAAEO,GAAG,CAACC;AAAjC,KAAnB;AACA,GAZF;AAaA,QAAMd,SAAS,GAAGD,SAAS,CAACG,eAAV,GAA4B,MAAMH,SAAS,CAACG,eAAV,CAA0BC,GAA1B,CAAlC,GAAmE,EAArF;AACA,SAAO;AAAEH,IAAAA;AAAF,GAAP;AACA,CAnBD;;AAqBA,eAAeL,SAAS,CAACJ,SAAD,CAAT,CAAqBO,KAArB,CAAf","sourcesContent":["import React from 'react';\nimport { makeStore } from '../redux';\nimport { Provider } from 'react-redux';\nimport { getCookie } from '../redux/actions/authActions';\n// import App, { Container } from 'next/app';\nimport axios from 'axios';\nimport withRedux from 'next-redux-wrapper';\nimport Head from '../components/head';\nimport Layout from '../components/Layout';\n\nconst MyApp = ({ Component, pageProps, store }) => {\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<Layout>\n\t\t\t\t<Head />\n\t\t\t\t<Component {...pageProps} />\n\t\t\t</Layout>\n\t\t</Provider>\n\t);\n};\n\nMyApp.getInitialProps = async ({ Component, ctx }) => {\n\t// we can dispatch from here too\n\tctx.store.dispatch({ type: 'API', payload: 'api' });\n\tconst token = getCookie('token', ctx.req);\n\taxios\n\t\t.get(`http://localhost:5000/users/api`, {\n\t\t\theaders: {\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'x-auth-token': token,\n\t\t\t},\n\t\t})\n\t\t.then((res) => {\n\t\t\t// console.log(res.data);\n\t\t\tctx.store.dispatch({ type: 'AUTHENTICATE', payload: token });\n\t\t\tctx.store.dispatch({ type: 'USERINFO', payload: res.data });\n\t\t});\n\tconst pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n\treturn { pageProps };\n};\n\nexport default withRedux(makeStore)(MyApp);\n"]},"metadata":{},"sourceType":"module"}