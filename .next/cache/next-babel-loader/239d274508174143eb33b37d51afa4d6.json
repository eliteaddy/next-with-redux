{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport { setTitle } from '../redux/actions/titleAction';\nimport { getUser, getCookie } from '../redux/actions/authActions';\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      user: this.props.user,\n      loading: true\n    });\n  }\n\n  componentDidMount() {\n    axios.get(`http://localhost:5000/users/api`, {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'x-auth-token': this.props.token\n      }\n    }).then(res => {\n      // console.log(res.data);\n      this.setState({\n        user: res.data,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return __jsx(\"div\", null, \"Loading...\");\n    }\n\n    return __jsx(\"div\", {\n      style: {\n        textAlign: 'center'\n      }\n    }, __jsx(\"h2\", null, \"Dashboard\"), __jsx(\"div\", {\n      style: {\n        textAlign: 'left'\n      }\n    }, __jsx(\"h4\", null, \"Name : \", this.state.user.name), __jsx(\"h4\", null, \"Email : \", this.state.user.email), __jsx(\"h4\", null, \"Date Created : \", new Date(this.state.user.date).toLocaleDateString()), __jsx(\"h4\", null, \"Time Created : \", new Date(this.state.user.date).toLocaleTimeString())));\n  }\n\n}\n\nDashboard.getInitialProps = async ({\n  store,\n  res,\n  req,\n  isServer\n}) => {\n  const token = getCookie('token', req);\n  store.dispatch(setTitle('Dashboard')); // console.log(isServer, token);\n\n  if (!token) {\n    {\n      isServer ? res.redirect('/signin') : Router.push('/signin');\n    }\n  }\n\n  if (token) {\n    store.dispatch(getUser(token));\n    const user = store.getState().authentication.user;\n    return {\n      user,\n      token\n    };\n  }\n\n  return {};\n};\n\nexport default connect(state => state, {\n  setTitle,\n  getUser\n})(Dashboard);","map":{"version":3,"sources":["/home/haryormeedey/Documents/React-Apps/withredux/frontend/pages/dashboard.js"],"names":["React","Component","axios","connect","Router","setTitle","getUser","getCookie","Dashboard","user","props","loading","componentDidMount","get","headers","Accept","token","then","res","setState","data","render","state","textAlign","name","email","Date","date","toLocaleDateString","toLocaleTimeString","getInitialProps","store","req","isServer","dispatch","redirect","push","getState","authentication"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,QAAT,QAAyB,8BAAzB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,8BAAnC;;AAEA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAAA;AAAA;;AAAA,mCACzB;AACPQ,MAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD,IADV;AAEPE,MAAAA,OAAO,EAAE;AAFF,KADyB;AAAA;;AAMjCC,EAAAA,iBAAiB,GAAG;AACnBV,IAAAA,KAAK,CACHW,GADF,CACO,iCADP,EACyC;AACvCC,MAAAA,OAAO,EAAE;AACRC,QAAAA,MAAM,EAAE,kBADA;AAER,wBAAgB,kBAFR;AAGR,wBAAgB,KAAKL,KAAL,CAAWM;AAHnB;AAD8B,KADzC,EAQEC,IARF,CAQQC,GAAD,IAAS;AACd;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA,IAAI,EAAES,GAAG,CAACE,IAAZ;AAAkBT,QAAAA,OAAO,EAAE;AAA3B,OAAd;AACA,KAXF;AAYA;;AAEDU,EAAAA,MAAM,GAAG;AACR,QAAI,KAAKC,KAAL,CAAWX,OAAf,EAAwB;AACvB,aAAO,gCAAP;AACA;;AACD,WACC;AAAK,MAAA,KAAK,EAAE;AAAEY,QAAAA,SAAS,EAAE;AAAb;AAAZ,OACC,8BADD,EAEC;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,SAAS,EAAE;AAAb;AAAZ,OACC,6BAAY,KAAKD,KAAL,CAAWb,IAAX,CAAgBe,IAA5B,CADD,EAEC,8BAAa,KAAKF,KAAL,CAAWb,IAAX,CAAgBgB,KAA7B,CAFD,EAGC,qCAAoB,IAAIC,IAAJ,CAAS,KAAKJ,KAAL,CAAWb,IAAX,CAAgBkB,IAAzB,EAA+BC,kBAA/B,EAApB,CAHD,EAIC,qCAAoB,IAAIF,IAAJ,CAAS,KAAKJ,KAAL,CAAWb,IAAX,CAAgBkB,IAAzB,EAA+BE,kBAA/B,EAApB,CAJD,CAFD,CADD;AAWA;;AApCgC;;AAuClCrB,SAAS,CAACsB,eAAV,GAA4B,OAAO;AAAEC,EAAAA,KAAF;AAASb,EAAAA,GAAT;AAAcc,EAAAA,GAAd;AAAmBC,EAAAA;AAAnB,CAAP,KAAyC;AACpE,QAAMjB,KAAK,GAAGT,SAAS,CAAC,OAAD,EAAUyB,GAAV,CAAvB;AACAD,EAAAA,KAAK,CAACG,QAAN,CAAe7B,QAAQ,CAAC,WAAD,CAAvB,EAFoE,CAGpE;;AACA,MAAI,CAACW,KAAL,EAAY;AACX;AACCiB,MAAAA,QAAQ,GAAGf,GAAG,CAACiB,QAAJ,CAAa,SAAb,CAAH,GAA6B/B,MAAM,CAACgC,IAAP,CAAY,SAAZ,CAArC;AACA;AACD;;AACD,MAAIpB,KAAJ,EAAW;AACVe,IAAAA,KAAK,CAACG,QAAN,CAAe5B,OAAO,CAACU,KAAD,CAAtB;AACA,UAAMP,IAAI,GAAGsB,KAAK,CAACM,QAAN,GAAiBC,cAAjB,CAAgC7B,IAA7C;AACA,WAAO;AAAEA,MAAAA,IAAF;AAAQO,MAAAA;AAAR,KAAP;AACA;;AACD,SAAO,EAAP;AACA,CAfD;;AAiBA,eAAeb,OAAO,CAAEmB,KAAD,IAAWA,KAAZ,EAAmB;AAAEjB,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAnB,CAAP,CAAiDE,SAAjD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport { setTitle } from '../redux/actions/titleAction';\nimport { getUser, getCookie } from '../redux/actions/authActions';\n\nclass Dashboard extends Component {\n\tstate = {\n\t\tuser: this.props.user,\n\t\tloading: true,\n\t};\n\n\tcomponentDidMount() {\n\t\taxios\n\t\t\t.get(`http://localhost:5000/users/api`, {\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t'x-auth-token': this.props.token,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\t// console.log(res.data);\n\t\t\t\tthis.setState({ user: res.data, loading: false });\n\t\t\t});\n\t}\n\n\trender() {\n\t\tif (this.state.loading) {\n\t\t\treturn <div>Loading...</div>;\n\t\t}\n\t\treturn (\n\t\t\t<div style={{ textAlign: 'center' }}>\n\t\t\t\t<h2>Dashboard</h2>\n\t\t\t\t<div style={{ textAlign: 'left' }}>\n\t\t\t\t\t<h4>Name : {this.state.user.name}</h4>\n\t\t\t\t\t<h4>Email : {this.state.user.email}</h4>\n\t\t\t\t\t<h4>Date Created : {new Date(this.state.user.date).toLocaleDateString()}</h4>\n\t\t\t\t\t<h4>Time Created : {new Date(this.state.user.date).toLocaleTimeString()}</h4>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nDashboard.getInitialProps = async ({ store, res, req, isServer }) => {\n\tconst token = getCookie('token', req);\n\tstore.dispatch(setTitle('Dashboard'));\n\t// console.log(isServer, token);\n\tif (!token) {\n\t\t{\n\t\t\tisServer ? res.redirect('/signin') : Router.push('/signin');\n\t\t}\n\t}\n\tif (token) {\n\t\tstore.dispatch(getUser(token));\n\t\tconst user = store.getState().authentication.user;\n\t\treturn { user, token };\n\t}\n\treturn {};\n};\n\nexport default connect((state) => state, { setTitle, getUser })(Dashboard);\n"]},"metadata":{},"sourceType":"module"}